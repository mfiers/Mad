"""
Prepare SMW
"""

import mwclient

from madpy.conf import conf
from madpy.logger import G
import madpy.smw

def hook_define_args(parser):
    """
    Set the arguments for 'set'
    """    
    madpy.smw.define_args(parser)
    parser.add_argument('-f', dest='force', help='force refresh (otherwise ' +
                        'property pages with content will be ignored',
                        action='store_true', default=False)
    parser.add_argument('-Y', dest='for_real', help='For real! Otherwise show what would be done',
                        action='store_true', default=False)

def run(args):
    """ Run SMW variable sync """
    site = madpy.smw.get_site(args)

    for dt in conf.datatypes:
        dti = conf.datatypes[dt]
        prop_name = "Property:%s" % dt
        page = site.Pages[prop_name]
        if args.for_real:
            ptxt = page.edit()
            if (not args.force) and len(ptxt) > 0:
                G.warning("Ignoring %s - property page already has content" % prop_name)
                continue

        ptxt = []
        
        if dti.has_key('help'):
            ptxt.append(dti.help + "\n")
        if dti.has_key('url'):
            ptxt.append("* See also:: %s" % dti.url)
        if dti.has_key('smw_data_type'):
            ptxt.append("* SMW datatype: [[Has type::%s]]" % dti.smw_data_type)
        if dti.has_key('mad_data_type'):
            ptxt.append("* Mad data type: [[Mad type::%s]]" % dti.mad_data_type)
        if dti.has_key('help'):
            ptxt.append("* Mad help text: [[Mad help::%s]]" % dti.help)            
        ptxt.append("[[Category:MadProperty]]")

        if args.for_real:
            page.save("\n".join(ptxt), summary="Mad autogenerated Property page")
            G.warning("regenerated %s" % prop_name)
        else:
            print '-' * 80
            print "would have saved to %s" % prop_name
            print "\n".join(ptxt)
            print
            
                
